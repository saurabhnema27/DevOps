name: Terraform Multi-Module Runner

on:
  workflow_dispatch:
    inputs:
      apply_changes:
        description: "Do you want to apply Terraform changes?"
        required: true
        default: "no"
        type: choice
        options:
          - "yes"
          - "no"

jobs:
  terraform:
    runs-on: ubuntu-latest

    environment: manual-approval  # GitHub environment with reviewers set

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Read modules and copying file to new folder
        id: run_terraform
        env: 
          TERRAFORM_WORKING_DIR: Terraform/run/$module
        run: |
          set -e

          while IFS= read -r module || [[ -n "$module" ]]; do
            echo "🔧 Working on module: $module"

            # Create working directory
            mkdir -p Terraform/run/$module
            cp -r Terraform/modules/$module/* Terraform/run/$module/
            cp Terraform/modules/global-override.tfvars Terraform/run/$module

            cd Terraform/run/$module

          done < Terraform/required-modules.txt

      - name: Terraform Init and Plan
        working-directory: ${{ env.TERRAFORM_WORKING_DIR }}
        run: |
          terraform init
          terraform plan -var-file="vpc.tfvars" -out=tfplan

      - name: Conditionally Apply
        if: github.event.inputs.apply_changes == 'yes'
        working-directory: ${{ env.TERRAFORM_WORKING_DIR }}
        run: |
          echo "✅ Applying Terraform..."
          terraform apply -auto-approve tfplan
          done < Terraform/required-modules.txt

      - name: Skipped Apply
        if: github.event.inputs.apply_changes != 'yes'
        run: echo "❌ Skipping Terraform apply as per user input."    
